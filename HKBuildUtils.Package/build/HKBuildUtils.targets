<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition="$(DisableOverwriteHollowKnightRefs) != true">
    <!--Overwrite HollowKnightRefs-->
    <HKBU_HKPath_Path>$([MSBuild]::GetPathOfFileAbove('hkpath.txt', '$(ProjectDir)'))</HKBU_HKPath_Path>
    <HKBU_HKPath_Path Condition="$(HKBU_HKPath_Path) == ''">$([MSBuild]::GetPathOfFileAbove('HollowKnightRefs.txt', '$(ProjectDir)'))</HKBU_HKPath_Path>
    <HollowKnightRefs Condition="$(HKBU_HKPath_Path) != ''">$([System.IO.File]::ReadAllText('$(HKBU_HKPath_Path)'))</HollowKnightRefs>
  </PropertyGroup>

  <!--Mod Resources-->
  <ItemGroup>
    <AdditionalFiles Include="@(ModResource)"
                     ModResourcesItemGroup="embedded"></AdditionalFiles>
    <AdditionalFiles Remove="@(ModResource->WithMetadataValue('Default', 'true'))"></AdditionalFiles>
    <AdditionalFiles Include="@(ModResource->WithMetadataValue('Default', 'true'))"
                     ModResourcesItemGroup="unpack"></AdditionalFiles>
    <EmbeddedResource Include="@(ModResource)"></EmbeddedResource>
  </ItemGroup>

  <PropertyGroup>
    <HKBU_UseLocalMod
        Condition="$(DisableLocalMods) == true">false</HKBU_UseLocalMod>
    <HKBU_HollowKnightCheckFile>$(HollowKnightRefs)\Assembly-CSharp.dll</HKBU_HollowKnightCheckFile>
    <HKBU_UseLocalMod
      Condition="$(HollowKnightRefs) != '' and $([System.IO.File]::Exists($(HKBU_HollowKnightCheckFile))) and $(DisableLocalMods) != true">true</HKBU_UseLocalMod>
    
    <HKBU_ModLibraryFolder>$(ProjectDir)\~ModLibrary\</HKBU_ModLibraryFolder>
    
    <HKBU_LibraryModCache
        Condition="$(HKBU_UseLocalMod) != true">$(HKBU_ModLibraryFolder)</HKBU_LibraryModCache>
    <HKBU_LibraryModCache
        Condition="$(HKBU_UseLocalMod) == true">$(HollowKnightRefs)\Mods\</HKBU_LibraryModCache>

    <HKBU_MAPICache
        Condition="$(HKBU_UseLocalMod) != true">$(HKBU_ModLibraryFolder)\ModdingAPI</HKBU_MAPICache>
    <HKBU_MAPICache
        Condition="$(HKBU_UseLocalMod) == true">$(HollowKnightRefs)</HKBU_MAPICache>
    
    <HKBU_BinTempPath Condition="$(HKBU_UseLocalMod) == true">$(ProjectDir)/obj/__TEMP_BIN__</HKBU_BinTempPath>
    <HKBU_BinTempPath Condition="$(HKBU_UseLocalMod) != true">$(HKBU_ModLibraryFolder)/__TEMP_BIN__</HKBU_BinTempPath>
  </PropertyGroup>


  <!--Mod Library Reference-->
  <ItemGroup>
    <!--Library Mods-->
    <HKBU_LibraryReferences_HAS_AssemblyName  Include="@(ModReference->HasMetadata('AssemblyName'))" />
    <HKBU_LibraryReferences Include="@(HKBU_LibraryReferences_HAS_AssemblyName -> '$(HKBU_LibraryModCache)/%(Identity)/%(AssemblyName).dll')"
                            />
    <HKBU_LibraryReferences Include="@(ModReference-> '$(HKBU_LibraryModCache)/%(Identity)/%(Identity).dll')"/>
    <Reference Include="@(HKBU_LibraryReferences->Distinct()->Exists())" />
    
    <!--Modding API-->
    <HKBU_MAPIFiles Include="$(HKBU_MAPICache)\*.dll"></HKBU_MAPIFiles>
    <Reference Include="@(HKBU_MAPIFiles)"/>
    
    <!--Reflect Helper-->
    <HKBU_ReflectHelperReferences Include="@(ReflectHelper-> '$(HKBU_BinTempPath)/ReflectHelper.%(Identity).dll')" />
    <!--<AdditionalFiles Include="$(_HKBuildUtils_CodeFolder)MonoHelper.cs" HKBU_ImportCode="true" 
                     Condition="@(HKBU_ReflectHelperReferences->Count()) > 0" />-->
    <Reference Include="@(HKBU_ReflectHelperReferences)" />
    
    
    <!--MonoMod Hooks-->
    <HKBU_MMHooksReferences Include="@(MonoModHook -> '$(HKBU_BinTempPath)/MMHOOK.%(Identity).dll')" />
    <AdditionalFiles Include="$(_HKBuildUtils_CodeFolder)MMHOOKCompilerHelper.cs" HKBU_ImportCode="true" 
                     Condition="@(HKBU_MMHooksReferences->Count()) > 0" />
    <Reference Include="@(HKBU_MMHooksReferences)" />
    <Reference Remove="@(MonoModHook-> '$(HKBU_MAPICache)/MMHOOK_%(Identity).dll')" />
    
    <None Remove="$(HKBU_LibraryModCache)/**"></None>
  </ItemGroup>

  <PropertyGroup>
    <HKBU_Use_Compiler_Helper>true</HKBU_Use_Compiler_Helper>
  </PropertyGroup>
  
  <!--Targets-->
  <Target Name="MergeHKMirror" BeforeTargets="PostBuildEvent" Condition="$(MergeHKMirror) == true">
    <MergeHKMirrorTask ModOutput="$(TargetPath)"></MergeHKMirrorTask>
  </Target>
  <!--
  <Target Name="MergeHKBULib" BeforeTargets="PostBuildEvent">
    <MergeHKBULibTask ModOutput="$(TargetPath)"></MergeHKBULibTask>
  </Target>-->

  <Target Name="ResolveModDependencies" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <HKBU_RequireMods Include="@(ModReference->Distinct())" />
    </ItemGroup>
    <Message Importance="high"
             Text="Reference: @(HKBU_LibraryReferences)"></Message>
    <Message Importance="high"
             Text="Require Mods: @(HKBU_RequireMods)"></Message>

    <ResovleModDependenciesTask LibraryCache="$(HKBU_LibraryModCache)"
                                ModNames=";@(HKBU_RequireMods, ';')"
                                Condition="$(HKBU_UseLocalMod) != true">
    </ResovleModDependenciesTask>

    <Message Condition="$(HKBU_UseLocalMod) == true"
             Text="Use the local Mods folder: $(HKBU_LibraryModCache)"
             Importance="high"></Message>

    <ItemGroup>
      <HKBU_RequireMods Include="@(ModReference->Distinct())" />

      <HKBU_LibraryReferences_HAS_AssemblyName  Include="@(ModReference->HasMetadata('AssemblyName'))" />
      <HKBU_LibraryReferences Include="@(HKBU_LibraryReferences_HAS_AssemblyName -> '$(HKBU_LibraryModCache)/%(Identity)/%(AssemblyName).dll')"
                            />
      <HKBU_LibraryReferences Include="@(ModReference-> '$(HKBU_LibraryModCache)/%(Identity)/%(Identity).dll')"/>
      <Reference Include="@(HKBU_LibraryReferences->Distinct()->Exists())" />

    </ItemGroup>
    <Message
            Condition="$(Configuration) == 'Release'"
             Text="Reference Mod Dlls: @(HKBU_LibraryReferences->Distinct()->Exists() ,'&#10;')"
             Importance="high"></Message>
  </Target>

  <Target Name="ResolveModdingAPI" BeforeTargets="BeforeBuild">
    <PropertyGroup>
      <HKBU_SkipSetupModdingAPI Condition="Exists('$(HKBU_MAPICache)/Assembly-CSharp.dll')">true</HKBU_SkipSetupModdingAPI>
    </PropertyGroup>
    <SetupModdingAPITask LibraryCache="$(HKBU_MAPICache)"
                         VanillaURL="$(VanillaURL)"
                                Condition="$(HKBU_UseLocalMod) != true and $(HKBU_SkipSetupModdingAPI) != true"
                         >
    </SetupModdingAPITask>
    <Message Text="Skip download Modding API"
             Importance="high"
             Condition="$(HKBU_SkipSetupModdingAPI) == true"></Message>
    <Message
             Text="Use the modding api folder: $(HKBU_MAPICache)"
             Importance="high"></Message>
    <ItemGroup>
      <HKBU_MAPIFiles Include="$(HKBU_MAPICache)\*.dll"></HKBU_MAPIFiles>
      <Reference Include="@(HKBU_MAPIFiles)"/>
      <Reference Remove="@(MonoModHook-> '$(HKBU_MAPICache)/MMHOOK_%(Identity).dll')" />
    </ItemGroup>
    <Message
             Condition="$(Configuration) == 'Release'"
             Text="Reference Modding API Dlls: @(HKBU_MAPIFiles, '&#10;')"
             Importance="high"></Message>
  </Target>
  
  <!--Generate ReflectHelper-->
  <Target Name="GenerateReflectHelper" BeforeTargets="BeforeBuild"
          AfterTargets="ResolveModDependencies;ResolveModdingAPI">
    <ItemGroup>
      <HKBU_ReflectHelper_RequireGenerate Include="@(HKBU_ReflectHelperReferences->Distinct())"/>
      <HKBU_ReflectHelper_RequireGenerate Remove="@(HKBU_ReflectHelper_RequireGenerate->Exists())"/>
    
    <HKBU_RequireFody Include="@(HKBU_ReflectHelperReferences)" />
    </ItemGroup>
    <GenerateReflectHelperTask
      AllReference=";@(Reference, ';')"
      OutFiles=";@(HKBU_ReflectHelper_RequireGenerate, ';')"
      />
  </Target>

  <!--Generate MonoMod Hooks-->
  <Target Name="GenerateMonoModHooks" BeforeTargets="BeforeBuild"
          AfterTargets="ResolveModDependencies;ResolveModdingAPI"
          >
    <ItemGroup>
      <HKBU_MMHOOK_RequireGenerate Include="@(HKBU_MMHooksReferences->Distinct())"/>
      <HKBU_MMHOOK_RequireGenerate Remove="@(HKBU_MMHOOK_RequireGenerate->Exists())"/>
    
      <HKBU_RequireFody Include="@(HKBU_MMHooksReferences)" />
    </ItemGroup>
    <GenerateMonoHookTask
      AllReference=";@(Reference, ';')"
      OutFiles=";@(HKBU_MMHOOK_RequireGenerate, ';')"
      AssemblyRoot="$(_HKBuildUtils_TaskFolder)"
      />
  </Target>

  <Target Name="CheckFody" AfterTargets="GenerateReflectHelper;GenerateMonoModHooks;BeforeBuild"
           Condition="@(HKBU_RequireFody->Count()) > 0">
    <ItemGroup>
      <HKBU_AllPackages Include="@(PackageReference->Distinct())" />
    </ItemGroup>
    <PropertyGroup>
      <HKBU_Fody_Reference>;@(PackageReference, ';');</HKBU_Fody_Reference>
    </PropertyGroup>
  
    <CheckFodyTask AllPackages="$(HKBU_Fody_Reference)" />

  </Target>

</Project>